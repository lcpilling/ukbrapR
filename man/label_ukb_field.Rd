% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/label_ukb_field.R
\name{label_ukb_field}
\alias{label_ukb_field}
\title{Update UK Biobank field with `title` and `label` from the schema}
\usage{
label_ukb_field(d, field, field_id = NULL, verbose = FALSE)
}
\arguments{
\item{d}{A data frame. The data frame containing the `field` to update.}

\item{field}{A string. The field (e.g., `p54_i0`) in the provided data frame to update.}

\item{field_id}{A string. If the field has been renamed (to e.g.,"assessment_centre") provide the field id here (e.g., "54").
\code{default=NULL}}

\item{verbose}{Logical. Be verbose,
\code{default=FALSE}}
}
\value{
Returns a data frame.
}
\description{
Variables such as education and ethnicity are provided as integers but have specific codes. 

The UK Biobank schema are machine-readable dictionaries and mappings defining the internal structure of the online Showcase. https://biobank.ctsu.ox.ac.uk/crystal/schema.cgi

This function updates a field in a data frame of UK Biobank with information from the Schema.
}
\examples{

# update the Assessment Centre variable
ukb <- ukbrapR::label_ukb_field(d=ukb, field="p54_i0")

table(ukb$p54_i0)                   # tabulates the values
table(haven::as_factor(ukb$p54_i0)) # tabulates the labels
haven::print_labels(ukb$p54_i0)   # show the value:label mapping for this variable

# get labels for all field names in the dataset
fields <- colnames(ukb)[2:ncol(ukb)]  # all columns except the first (usually `eid`)
for (f in fields)  ukb <- label_ukb_field(d=ukb, field=f)

}
\author{
Luke Pilling
}
