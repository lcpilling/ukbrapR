% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_emr.R
\name{get_emr}
\alias{get_emr}
\title{Get UK Biobank participant Electronic Medical Records (EMR) data}
\usage{
get_emr(
  codes_df,
  file_paths = NULL,
  spark_master = "spark://master:41000",
  verbose = FALSE,
  local_paths = lifecycle::deprecated()
)
}
\arguments{
\item{codes_df}{A data frame. Contains two columns: `code` and `vocab_id` i.e., a list of diagnostic codes, and an indicator of the vocabulary. Other columns are ignored.}

\item{file_paths}{A data frame. Columns must be `object` and `path` containing paths to required files. Default assumes you have the tables exported in the RAP environment from
ukbrapR::export_tables() 
\code{default=NULL}}

\item{spark_master}{A string. The `master` argmuent passed to `sparklyr::spark_connect()`.
\code{default='spark://master:41000'}}

\item{verbose}{Logical. Be verbose,
\code{default=FALSE}}
}
\value{
Returns a list of data frames (the participant data for the requested diagnosis codes: `death_cause`, `hesin_diag`, and `gp_clinical`. Also includes the original codes list)
}
\description{
Get UK Biobank medical records for specific diagnostic codes list

If `file_paths` argument is blank and this is launched on a Spark node/cluster on the UK Biobank Research Analysis Platform (DNAnexus), will get info from Spark environment.

If `file_paths` to exported tables are provided, will extract records from these (i.e., does not need to be launched in a Spark cluster)
}
\examples{
# example diagnostic codes for CKD from GEMINI multimorbidity project
head(codes_df_ckd)

# In a RAP Spark cluster:

# get EMR data - returns list of data frames (one per source)
emr_dat <- get_emr(codes_df_ckd)

# If providing paths to exported tables:

# set location of file paths (if using one of my group servers `indy`, `snow` or `shapter` you can ignore this option)
paths = data.frame(
  object = c("death","death_cause","hesin","hesin_diag","gp_clinical"),
  path = c("/path/to/death.tsv","/path/to/death_cause.tsv","/path/to/hesin.tsv","/path/to/hesin_diag.tsv","/path/to/gp_clinical.tsv")
)

# get EMR data - returns list of data frames (one per source)
emr_dat <- get_emr(codes_df_ckd, file_paths = paths)

# save to files on the RAP worker node -- either as an R object, or separate as text files:
save(emr_dat, "ukbrap.CKD.emr.20231114.RDat")
readr::write_tsv(emr_dat$hesin_diag,  "ukbrap.CKD.hesin_diag.20231114.txt.gz")

# upload data to RAP storage
upload_to_rap(file="ukbrap.CKD.*.20231114.*", dir="")

}
\author{
Luke Pilling
}
